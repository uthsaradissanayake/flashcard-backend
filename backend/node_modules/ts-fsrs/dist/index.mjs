import G from"seedrandom";var d=(e=>(e[e.New=0]="New",e[e.Learning=1]="Learning",e[e.Review=2]="Review",e[e.Relearning=3]="Relearning",e))(d||{}),n=(e=>(e[e.Manual=0]="Manual",e[e.Again=1]="Again",e[e.Hard=2]="Hard",e[e.Good=3]="Good",e[e.Easy=4]="Easy",e))(n||{});Date.prototype.scheduler=function(e,t){return y(this,e,t)},Date.prototype.diff=function(e,t){return M(this,e,t)},Date.prototype.format=function(){return R(this)},Date.prototype.dueFormat=function(e,t,a){return E(this,e,t,a)};function y(e,t,a){return new Date(a?u(e).getTime()+t*24*60*60*1e3:u(e).getTime()+t*60*1e3)}function M(e,t,a){if(!e||!t)throw new Error("Invalid date");const r=u(e).getTime()-u(t).getTime();let i=0;switch(a){case"days":i=Math.floor(r/(24*60*60*1e3));break;case"minutes":i=Math.floor(r/(60*1e3));break}return i}function R(e){const t=u(e),a=t.getFullYear(),r=t.getMonth()+1,i=t.getDate(),s=t.getHours(),l=t.getMinutes(),o=t.getSeconds();return`${a}-${f(r)}-${f(i)} ${f(s)}:${f(l)}:${f(o)}`}function f(e){return e<10?`0${e}`:`${e}`}const p=[60,60,24,31,12],g=["second","min","hour","day","month","year"];function E(e,t,a,r=g){e=u(e),t=u(t),r.length!==g.length&&(r=g);let i=e.getTime()-t.getTime(),s;for(i/=1e3,s=0;s<p.length&&!(i<p[s]);s++)i/=p[s];return`${Math.floor(i)}${a?r[s]:""}`}function u(e){if(typeof e=="object"&&e instanceof Date)return e;if(typeof e=="string"){const t=Date.parse(e);if(isNaN(t))throw new Error(`Invalid date:[${e}]`);return new Date(t)}else if(typeof e=="number")return new Date(e);throw new Error(`Invalid date:[${e}]`)}function _(e){if(typeof e=="string"){const t=e.charAt(0).toUpperCase(),a=e.slice(1).toLowerCase(),r=d[`${t}${a}`];if(r===void 0)throw new Error(`Invalid state:[${e}]`);return r}else if(typeof e=="number")return e;throw new Error(`Invalid state:[${e}]`)}function $(e){if(typeof e=="string"){const t=e.charAt(0).toUpperCase(),a=e.slice(1).toLowerCase(),r=n[`${t}${a}`];if(r===void 0)throw new Error(`Invalid rating:[${e}]`);return r}else if(typeof e=="number")return e;throw new Error(`Invalid rating:[${e}]`)}const k=[n.Again,n.Hard,n.Good,n.Easy],T=[{start:2.5,end:7,factor:.15},{start:7,end:20,factor:.1},{start:20,end:1/0,factor:.05}];function D(e,t,a){let r=1;for(const l of T)r+=l.factor*Math.max(Math.min(e,l.end)-l.start,0);e=Math.min(e,a);let i=Math.max(2,Math.round(e-r));const s=Math.min(Math.round(e+r),a);return e>t&&(i=Math.max(i,t+1)),i=Math.min(i,s),{min_ivl:i,max_ivl:s}}class z{again;hard;good;easy;last_review;last_elapsed_days;copy(t){return{...t}}constructor(t,a){this.last_review=t.last_review||t.due,this.last_elapsed_days=t.elapsed_days,t.elapsed_days=t.state===d.New?0:a.diff(t.last_review,"days"),t.last_review=a,t.reps+=1,this.again=this.copy(t),this.hard=this.copy(t),this.good=this.copy(t),this.easy=this.copy(t)}update_state(t){return t===d.New?(this.again.state=d.Learning,this.hard.state=d.Learning,this.good.state=d.Learning,this.easy.state=d.Review):t===d.Learning||t===d.Relearning?(this.again.state=t,this.hard.state=t,this.good.state=d.Review,this.easy.state=d.Review):t===d.Review&&(this.again.state=d.Relearning,this.hard.state=d.Review,this.good.state=d.Review,this.easy.state=d.Review,this.again.lapses+=1),this}schedule(t,a,r,i){return this.again.scheduled_days=0,this.hard.scheduled_days=a,this.good.scheduled_days=r,this.easy.scheduled_days=i,this.again.due=y(t,5),this.hard.due=a>0?y(t,a,!0):y(t,10),this.good.due=y(t,r,!0),this.easy.due=y(t,i,!0),this}record_log(t,a){return{[n.Again]:{card:this.again,log:{rating:n.Again,state:t.state,due:this.last_review,stability:t.stability,difficulty:t.difficulty,elapsed_days:t.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:t.scheduled_days,review:a}},[n.Hard]:{card:this.hard,log:{rating:n.Hard,state:t.state,due:this.last_review,stability:t.stability,difficulty:t.difficulty,elapsed_days:t.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:t.scheduled_days,review:a}},[n.Good]:{card:this.good,log:{rating:n.Good,state:t.state,due:this.last_review,stability:t.stability,difficulty:t.difficulty,elapsed_days:t.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:t.scheduled_days,review:a}},[n.Easy]:{card:this.easy,log:{rating:n.Easy,state:t.state,due:this.last_review,stability:t.stability,difficulty:t.difficulty,elapsed_days:t.elapsed_days,last_elapsed_days:this.last_elapsed_days,scheduled_days:t.scheduled_days,review:a}}}}}const A=.9,F=36500,C=[.5701,1.4436,4.1386,10.9355,5.1443,1.2006,.8627,.0362,1.629,.1342,1.0166,2.1174,.0839,.3204,1.4676,.219,2.8237],H=!1,I="3.5.7",w=e=>({request_retention:(e==null?void 0:e.request_retention)||A,maximum_interval:(e==null?void 0:e.maximum_interval)||F,w:(e==null?void 0:e.w)||C,enable_fuzz:(e==null?void 0:e.enable_fuzz)||H});function q(e,t){const a={due:e?u(e):new Date,stability:0,difficulty:0,elapsed_days:0,scheduled_days:0,reps:0,lapses:0,state:d.New,last_review:void 0};return t&&typeof t=="function"?t(a):a}const m=-.5,v=19/81;class N{param;intervalModifier;seed;constructor(t){this.param=new Proxy(w(t),this.params_handler_proxy()),this.intervalModifier=this.calculate_interval_modifier(this.param.request_retention)}get interval_modifier(){return this.intervalModifier}calculate_interval_modifier(t){if(t<=0||t>1)throw new Error("Requested retention rate should be in the range (0,1]");return+((Math.pow(t,1/m)-1)/v).toFixed(8)}get parameters(){return this.param}set parameters(t){this.update_parameters(t)}params_handler_proxy(){const t=this;return{set:function(a,r,i){return r==="request_retention"&&Number.isFinite(i)&&(t.intervalModifier=t.calculate_interval_modifier(Number(i))),a[r]=i,!0}}}update_parameters(t){const a=w(t);for(const r in a)if(r in this.param){const i=r;this.param[i]=a[i]}}init_ds(t){t.again.difficulty=this.init_difficulty(n.Again),t.again.stability=this.init_stability(n.Again),t.hard.difficulty=this.init_difficulty(n.Hard),t.hard.stability=this.init_stability(n.Hard),t.good.difficulty=this.init_difficulty(n.Good),t.good.stability=this.init_stability(n.Good),t.easy.difficulty=this.init_difficulty(n.Easy),t.easy.stability=this.init_stability(n.Easy)}next_ds(t,a,r,i){t.again.difficulty=this.next_difficulty(a,n.Again),t.again.stability=this.next_forget_stability(a,r,i),t.hard.difficulty=this.next_difficulty(a,n.Hard),t.hard.stability=this.next_recall_stability(a,r,i,n.Hard),t.good.difficulty=this.next_difficulty(a,n.Good),t.good.stability=this.next_recall_stability(a,r,i,n.Good),t.easy.difficulty=this.next_difficulty(a,n.Easy),t.easy.stability=this.next_recall_stability(a,r,i,n.Easy)}init_stability(t){return Math.max(this.param.w[t-1],.1)}init_difficulty(t){return+Math.min(Math.max(this.param.w[4]-(t-3)*this.param.w[5],1),10).toFixed(8)}apply_fuzz(t,a,r){if(!r||t<2.5)return Math.round(t);const i=G(this.seed)(),{min_ivl:s,max_ivl:l}=D(t,a,this.param.maximum_interval);return Math.floor(i*(l-s+1)+s)}next_interval(t,a,r=this.param.enable_fuzz){const i=Math.min(Math.max(1,Math.round(t*this.intervalModifier)),this.param.maximum_interval);return this.apply_fuzz(i,a,r)}next_difficulty(t,a){const r=t-this.param.w[6]*(a-3);return this.constrain_difficulty(this.mean_reversion(this.param.w[4],r))}constrain_difficulty(t){return Math.min(Math.max(+t.toFixed(8),1),10)}mean_reversion(t,a){return+(this.param.w[7]*t+(1-this.param.w[7])*a).toFixed(8)}next_recall_stability(t,a,r,i){const s=n.Hard===i?this.param.w[15]:1,l=n.Easy===i?this.param.w[16]:1;return+(a*(1+Math.exp(this.param.w[8])*(11-t)*Math.pow(a,-this.param.w[9])*(Math.exp((1-r)*this.param.w[10])-1)*s*l)).toFixed(8)}next_forget_stability(t,a,r){return+(this.param.w[11]*Math.pow(t,-this.param.w[12])*(Math.pow(a+1,this.param.w[13])-1)*Math.exp((1-r)*this.param.w[14])).toFixed(8)}forgetting_curve(t,a){return+Math.pow(1+v*t/a,m).toFixed(8)}}class P extends N{constructor(t){super(t)}preProcessCard(t){return{...t,state:_(t.state),due:u(t.due),last_review:t.last_review?u(t.last_review):void 0}}preProcessDate(t){return u(t)}preProcessLog(t){return{...t,due:u(t.due),rating:$(t.rating),state:_(t.state),review:u(t.review)}}repeat(t,a,r){const i=this.preProcessCard(t);a=this.preProcessDate(a);const s=new z(i,a).update_state(i.state);this.seed=String(a.getTime())+String(i.reps);let l,o,h;const c=i.elapsed_days;switch(i.state){case d.New:this.init_ds(s),s.again.due=a.scheduler(1),s.hard.due=a.scheduler(5),s.good.due=a.scheduler(10),l=this.next_interval(s.easy.stability,c),s.easy.scheduled_days=l,s.easy.due=a.scheduler(l,!0);break;case d.Learning:case d.Relearning:h=0,o=this.next_interval(s.good.stability,c),l=Math.max(this.next_interval(s.easy.stability,c),o+1),s.schedule(a,h,o,l);break;case d.Review:{const L=i.difficulty,x=i.stability,S=this.forgetting_curve(c,x);this.next_ds(s,L,x,S),h=this.next_interval(s.hard.stability,c),o=this.next_interval(s.good.stability,c),h=Math.min(h,o),o=Math.max(o,h+1),l=Math.max(this.next_interval(s.easy.stability,c),o+1),s.schedule(a,h,o,l);break}}const b=s.record_log(i,a);return r&&typeof r=="function"?r(b):b}get_retrievability(t,a,r=!0){const i=this.preProcessCard(t);if(a=this.preProcessDate(a),i.state!==d.Review)return;const s=Math.max(a.diff(i.last_review,"days"),0),l=this.forgetting_curve(s,Math.round(i.stability));return r?`${(l*100).toFixed(2)}%`:l}rollback(t,a,r){const i=this.preProcessCard(t),s=this.preProcessLog(a);if(s.rating===n.Manual)throw new Error("Cannot rollback a manual rating");let l,o,h;switch(s.state){case d.New:l=s.due,o=void 0,h=0;break;case d.Learning:case d.Relearning:case d.Review:l=s.review,o=s.due,h=i.lapses-(s.rating===n.Again&&s.state===d.Review?1:0);break}const c={...i,due:l,stability:s.stability,difficulty:s.difficulty,elapsed_days:s.last_elapsed_days,scheduled_days:s.scheduled_days,reps:Math.max(0,i.reps-1),lapses:Math.max(0,h),state:s.state,last_review:o};return r&&typeof r=="function"?r(c):c}forget(t,a,r=!1,i){const s=this.preProcessCard(t);a=this.preProcessDate(a);const l=s.state===d.New?0:a.diff(s.last_review,"days"),o={rating:n.Manual,state:s.state,due:s.due,stability:s.stability,difficulty:s.difficulty,elapsed_days:0,last_elapsed_days:s.elapsed_days,scheduled_days:l,review:a},h={card:{...s,due:a,stability:0,difficulty:0,elapsed_days:0,scheduled_days:0,reps:r?0:s.reps,lapses:r?0:s.lapses,state:d.New,last_review:s.last_review},log:o};return i&&typeof i=="function"?i(h):h}reschedule(t,a={}){if(!Array.isArray(t))throw new Error("cards must be an array");const r=[];for(const i of t){if(_(i.state)!==d.Review||!i.last_review)continue;const s=Math.floor(i.scheduled_days),l=this.next_interval(+i.stability.toFixed(2),Math.round(i.elapsed_days),a.enable_fuzz??!0);if(l===s||l===0)continue;const o={...i};o.scheduled_days=l;const h=y(o.last_review,l,!0);a.dateHandler&&typeof a.dateHandler=="function"?o.due=a.dateHandler(h):o.due=h,r.push(o)}return r}}const U=e=>new P(e||{});export{m as DECAY,v as FACTOR,P as FSRS,N as FSRSAlgorithm,I as FSRSVersion,k as Grades,n as Rating,z as SchedulingCard,d as State,q as createEmptyCard,M as date_diff,y as date_scheduler,H as default_enable_fuzz,F as default_maximum_interval,A as default_request_retention,C as default_w,u as fixDate,$ as fixRating,_ as fixState,R as formatDate,U as fsrs,w as generatorParameters,D as get_fuzz_range,E as show_diff_message};
//# sourceMappingURL=index.mjs.map
